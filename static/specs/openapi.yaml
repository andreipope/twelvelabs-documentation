openapi: 3.0.0
host: 35.82.130.225:8080 
basePath: /v1
accepts:
  - application/json
produces:
  - application/json
servers:
  - url: http://35.82.130.225:8080
paths:
  /engines:
    get:
      summary: List search engines
      description: List all the search engines that are available in your account.
      operationId: listEngines
      tags:
        - Engines 
      parameters:
        - name: x-api-key
          in: header
          description: >
            Your API key.

            **NOTE:** You can find your API key on the [Dashboard](https://api.twelvelabs.io/dashboard) page.   
          required: true
          type: string 
        - name: Content-Type
          in: header
          description: Must be set to `application/json`.
      responses:
        '200':
          description: testing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getEngines'
                
  /engines/{engine-id}:
    get:
      summary: Retrieve a search engine
      operationId: retrieveSearchEngine
      tags:
        - Engines
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type' 
        - name: engine-id
          in: path
          description: The identifier of the engine to retrieve.
          required: true
          type: string
      responses:
        '200':
          description: The specified engine has successfully been retrieved.
  /indexes:
    post:
      summary: Create an index.
      operationId: createIndex
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type' 
        - name: engine-id
          in: body
          description: >
            Specifies the search engine. The following options are available:
              - `marengo2`
              - `marengo`
            
            **NOTES**:
              - Twelve Labs strongly recommends you use `marengo2`.
              - You cannot change the engine once the index has been created.
          required: true
          xtype: string
        - name: index_options
          in: body
          description: >
            Must be a subset of `[visual, conversation, text_in_video]`.
          required: true
          type: array
          example: [visual, conversation, text_in_video]
        - name: index_name
          in: body
          description: >
            The name of the index. Make sure you use a succinct and descriptive name.
          required: true
          type: string
          example: myIndex
      responses:
        '200':
          description: An index has successfully been created.
        '400':
          description: The request has failed.
    get:
      summary: List indexes
      description: Returns a list of the indexes in your account. The API returns indexes sorted by creation date, with the oldest indexes at the top of the list.
      operationId: ListIndexes
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/sort_by'
        - $ref: '#/components/parameters/sort_option'
        - name: _id
          in: query
          description: Filter by the unique identifier of an index.
          required: false
          type: string
        - name: index_name
          in: query
          description: Filter by the name of the index.
          required: false
          type: string
        - name: index_options
          in: query
          description: >
            Filter by the indexing options. When filtering multiple indexing options, the values must be comma-separated.
            
            Example: `index_options=visual,conversation`.
          required: false
          type: List
      responses:
        '200':
          description: The indexes have successfully been retrieved.
        '400':
          description: The request has failed.
  /indexes/{index-id}:
    get:
      summary: Retrieve an index object.
      operationId: retrieveIndex
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: >
            Unique identifier of the index to retrieve.
          required: true
          type: string
      responses:
        '200':
          description: The specified index has successfully been retrieved.
        '400':
          description: The request has failed.
    put:
      summary: Update an index
      operaitonId: updateIndex
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
        - name: index_name
          in: body
          description: >
            The name of the index.
          required: true
          type: string
      responses:
        '200':
          description: The specified index has successfully been updated.
        '400':
          description: The request has failed.
    delete:
      summary: Delete an index
      description: Delete the specified index and all the video indexes within it. This action cannot be undone.
      operationId: deleteIndex
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: >
            Unique identifier of the index to delete.
          required: true
          type: string
      responses:
        '200':
          description: The specified index has successfully been deleted.
        '400':
          description: The request has failed.
  /indexes/tasks:
    post:
      summary: Create a video indexing task.
      operationId: createVideoIndexingTask
      requestBody:
        content: 
          multipart/form-data: # Media type
            schema:            # Request payload
              type: object
              properties:      # Request parts
                index_id:            
                  type: string
                  description: >
                     The unique identifier of the index to which the video is being uploaded.
                  required: true
                video_file:
                  type: string
                  format: application/octet-stream
                  description: >
                    Specify this parameter to upload a video from your local file system.
                  required: false
                video_url:
                  type: string
                  description: >
                    Specify this parameter to upload a video from a publicly accessible URL.
                  required: false
                provide_transcription:
                  type: Boolean
                  description: >
                    A boolean value specifying whether or not you provide a transcription for this video.
                  required: false
                transcription_file:
                  type: string
                  format: application/octet-stream
                  description: >
                    When the provide_transcription parameter is set to `true`, and you want to provide a transcription from the local file system, use the `transcription_file` parameter to pass your transcription file to the API service.
                    It must be a stream of bytes encoded as `multipart/form-data`.
                    The transcription must be in the SRT or VTT format.
                  required: false
                transcription_url:
                  type: string
                  description: >
                    When the `provide_transcription` parameter is set to `true`, and you want to provide a transcription from a publicly accessible URL, use the `transcription_url` parameter to specify the URL of your transcription.
                    The transcription must be in the SRT or VTT format.
                  required: false
                language:
                  type: string
                  description: Must be set to `en`.
                  required: false
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          description: A video indexing task has successfully been created.
        '400':
          description: The request has failed.
    get:
      summary: List video indexing tasks.
      description: >
        Returns a list of the video indexing tasks in your account.
        The API returns your video indexing tasks sorted by creation date, with the newest at the top of the list.
      operationId: createVideoIndexingTask
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/sort_by'
        - $ref: '#/components/parameters/sort_option'
        - name: _id
          in: query
          description: >
            Filter by the unique identifier of a video indexing task. 
          required: false
          type: string
        - name: index_id
          in: query
          description: >
            Filter by the unique identifier of an index.
          required: false
          type: string
        - name: filename
          in: query
          description: >
            Filter by filename.
          required: false
          type: string
        - name: duration
          in: query
          description: >
            Filter by duration. Expressed in seconds.
          required: false
          type: Integer
        - name: width
          in: query
          description: >
            Filter by width.
          required: false
          type: Integer
        - name: height
          in: query
          description: >
            Filter by height.
          required: false
          type: Integer
        - name: created_at
          in: query
          description: >
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was created.
          required: false
          type: string
        - name: updated_at
          in: query
          description: >
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was updated.
          required: false
          type: string
        - name: estimated_time
          in: query
          description: >
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task is ready to be searched.
      responses:
        '200':
          description: The video indexing tasks have successfully been retrieved.
        '400':
          description: The request has failed.
  /indexes/tasks/{task-id}:
    get:
      summary: Retrieve a video indexing task.
      operationId: retrieveVideoIndexingTask
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
        - name: task-id
          in: path
          description: >
            The unique identifier of the video indexing task to retrieve.
          required: true
          type: string
      responses:
        '200':
          description: The specified video indexing task has successfully been retrieved.
        '400':
          description: The request has failed.
  /indexes/tasks/{task-id}/video-id:
    get:
      summary: Retrieve the video ID associated with a task ID
      description: Provide the ID of a video indexing task, and the API service will return the corresponding video ID.
      operationId: retrieveVideoIdTaskId
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
        - name: task-id
          in: path
          description: >
            A task ID that the API returned when you created a video indexing task.
      responses:
        '200':
          description: The corresponding video ID has successfully been retrieved.
        '400':
          description: The request has failed.
  /indexes/tasks/transfers:
    summary: Make a cloud-to-cloud transfer
    post:
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content: 
          multipart/form-data: # Media type
            schema:            # Request payload
              type: object
              properties:      # Request parts
                file:
                  description: >
                    A JSON file containing the list of video files to be transferred and indexed.
                  type: string
                  format: application/octet-stream
      responses:
        '200':
          description: One or more video indexing tasks index has successfully been created.
        '400':
          description: The request has failed.
  /indexes/{index-id}/videos:
    get:
      summary: List video vectors.
      description: >
        Returns a list of the video vectors in the specified index. The API returns your video vectors sorted by creation date, with the newest at the top of the list.
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/sort_by'
        - $ref: '#/components/parameters/sort_option'
        - name: _id
          in: query
          description: > 
            Filter by the unique identifier of a video index.
          required: false
          type: Boolean
        - name: filename
          in: query
          description: >
            Filter by filename.
          required: false
          type: string
        - name: duration
          in: query
          description: >
            Filter by duration. Expressed in seconds.
          type: Integer
        - name: fps
          in: query
          description: >
            Filter by frames per second.
          required: false
          type: Integer
        - name: width
          in: query
          description: >
            Filter by width.
          required: false
          type: Integer
        - name: height
          in: query
          description: >
            Filter by height.
          required: false
          type: Integer
        - name: size
          in: query
          description: >
            Filter by size. Expressed in bytes.
          required: false
          type: Integer
        - name: created_at
          in: query
          description: >
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was created.
          required: false
          type: string
        - name: updated_at
          in: query
          description: >
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was updated.
          required: false
          type: string
        - name: indexed_at
          in: query
          description: >
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video has finished indexing.
          required: false
          type: string
      responses:
        '200':
          description: The video indexes associated with the specified index have successfully been retrieved.
        '400':
          description: The request has failed.
  /indexes/{index-id}/videos/{video-id}:
    get:
      summary: Retrieve a video vector.
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: >
            The unique identifier of the index with which the video vector is associated.
          required: true
          type: string
        - name: video-id
          in: path
          description: >
            The unique identifier of the video vector to retrieve.
          required: true
          type: string
      responses:
        '200':
          description: The specified video vector has successfully been retrieved.
        '400':
          description: The request has failed.
    delete:
      summary: Delete a video vector.
      description: >
        Delete the specified video vector. This action cannot be undone.
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: >
            The unique identifier of the index with which the video vector is associated.
          required: true
          type: string
        - name: video-id
          in: path
          description: >
            The unique identifier of the video vector to delete.
          required: true
          type: string
      responses:
        '200':
          description: The specified video vector has successfully been deleted.
        '400':
          description: The request has failed.
  /indexes/{index-id}/videos/{video-id}/transcription:
    get:
      summary: Retrieve a transcription of the spoken words.
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
        - name: start
          in: query
          description: >
            The start of the time range (in seconds) to retrieve transcription for.
          required: false
          type: Integer
        - name: end
          in: query
          description: >
            The end of the time range (in seconds) to retrieve transcription for.
          required: false
          type: Integer
      responses:
        '200':
          description: Transcription has successfully been retrieved.
        '400':
          description: The request has failed.
  /search:
    post:
      summary: Make a search request.
      description: Searches for relevant matches in an index.
      parameters:
        - $ref: '#/components/parameters/x-api-key' 
        - $ref: '#/components/parameters/Content-Type'
        - name: next-page-id
          in: path
          description: >
            A token that identifies the page to retrieve. If not specified, the API returns the first page.
          required: false
          type: string
        - name: query
          in: body
          description: >
            Your search query. Note that the API supports full natural language-based search. The following examples are valid queries: "birds flying near a castle", "sun shining on water", "chickens on the road", "an officer holding a child's hand.", "crowd cheering in the stadium."
          required: true
          type: string
        - name: index_id
          in: body
          description: >
            The unique identifier of the index to search.
          required: true
          type: string
        - name: search_options
          in: body
          description: >
            Search options specify the source of information the API service uses when performing a search.
            The following values are supported:

            - `visual`: Allows you to search by objects, actions, sound, movements, places, situational events, and complex audio-visual text descriptions.
            
            - `conversation`: Allows you to find the exact point in your video where the specified word or phrase is mentioned.
            
            - `text_in_video`: Allows you to search for text that appears in your videos (OCR).
          
            
            The search options you specify must be a subset of the indexing options used when you created the index.
          
            You can specify multiple search options in conjunction with the `operator` parameter described below to broaden or narrow your search.
          required: true
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 3
          example: ["visual", "conversation"]
        - name: operator
          in: body
          description: >
            When you specify more than one search option, you can use this parameter to indicate the logical operation that the API service should perform.
            
            The following logical operators are supported:
            
            - `or`: The API returns the results for which any search option matches.
            
            - `and`: The API returns only the results for which all search options match.

            For details and examples, see the [Multiple Search Options](/guides/performing-searches/multiple-search-options) page.

            
            **Default**: `or`.
        - name: conversation_option
          in: body
          description: >
            Specifies the type of search the API service will perform. The following values are supported:
            
            - `semantic`: The API service returns results that are semantically similar to the search query even if the results don't exactly match the search query.
            
            - `transcription`: The API service returns only the exact matches. Note that `transcription` can only be used with a single search option. For example, you cannot set the `search_option parameter` to equal `["visual", "conversation", "text_in_video"]` and the `conversation_option` parameter to equal `transcription`.


            **Default**: `semantic`. 
        - $ref: '#/components/parameters/page_limit'
        - name: filter
          in: body
          description: >
            Use the `filter` parameter to narrow the scope of your query.  This parameter is of type Object and can contain one or more of the following fields:

            - `id`: An array of strings that restricts your search results based on the specified video IDs.
            
            - `duration`: A numeric field that restricts your search results based on duration, expressed in seconds.
            
            - width: A numeric field that restricts your search results based on width.
            
            - `height`: A numeric field that restricts your search results based on height.
 
            - `size`: A numeric field that restricts your search results based on size, expressed in bytes.

            
            For string fields, the filter `parameter` returns only the results that equal the value you specify. The following example filters on the videos whose title is "Animal Encounters part 1": `"title": "Animal Encounters part 1"`.

            For numeric fields, the `filter` parameter returns the results that match based on the arithmetic comparison. The following example filters on the videos whose height is greater than or equal to 400 and less than or equal to 500: `"height": { "gte": 400, "lte": 500 }`.

            
            For more details and examples, see the [Filter Search Results Based on Metadata](/concepts/filtering/metadata) page.
      responses:
        '200':
          description: Successfully performed a search request.
        '400':
          description: The request has failed.

components:
  schemas:
    getEngines:
      type: object
      properties:
        data:
          type: array
          description: An array that contains the `engine` objects.
          items:
            type: object
            properties:
              _id:
                type: string
                example: marengo
              created_at:
                type: string
                example: 2022-01-01 00:00:00 +0000 UTC
              updated_at:
                type: string
                example: 2022-01-01 00:00:00 +0000 UTC
              allowed_index_options:
                type: array
                items: 
                  type: string
                  example: ['visual', 'text_in_video', 'conversation']
              author:
                type: string
                example: twelve_labs
              finetune:
                type: Boolean
                example: false
              ready:
                type: Boolean
                example: true
              type:
                type: string
                example: engine
        type:
          type: string
          description: Describes the type of operation.
          example: engine_list
  parameters:
    Content-Type:
      name: Content-Type
      in: header
      description: Must be set to `application/json`.
      type: string
      required: true
    x-api-key:
      name: x-api-key
      in: header
      description: >
        Your API key.

        **NOTE:** You can find your API key on the [Dashboard](https://api.twelvelabs.io/dashboard) page.
      type: string
      required: true
    page:
      name: page
      in: query
      description: >
        A number that identifies the page to retrieve.
            
        **Default**: `1`.
      type: Integer
      required: false
    page_limit:
      name: page_limit
      in: query
      description: >
        The number of items to return on each page.

        
        **Default**: `10`.
        

        **Max**: `100`.
      type: Integer
      required: false
    sort_by:
      name: sort_by
      in: query
      description: >
        The field to sort on. The following options are available:

        - `updated_at`: Sorts by the time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, when the item was updated.
        
        - `created_at`: Sorts by the time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, when the item was created.
        
        **Default**: `created_at`.
      type: string
      required: false
    sort_option:
      name: sort_option
      in: query
      description: >
        The sorting direction. The following options are available:
        
        - `asc` 
        
        - `desc`

        **Default**: `desc`.
      type: string
      required: false
